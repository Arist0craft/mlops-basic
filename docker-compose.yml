version: '3.8'

x-python-common:
  &python-common
    image: mlops-c:latest
    build: .
    env_file:
      - .env
    depends_on:
      minio:
        condition: service_healthy

x-airflow-common:
  &airflow-common
  << : *python-common
  volumes:
    - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
    - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
    - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
    - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
    - ${AIRFLOW_PROJ_DIR:-.}/airflow.cfg:/opt/airflow/airflow.cfg
    - ./.aws/:/home/airflow/.aws/
  depends_on:
    postgres:
      condition: service_healthy
    

services:
  postgres:
    image: postgres:15
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "${POSTGRES_DB}"]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 30s
    volumes:
      - ./db_data/db_1:/var/lib/postgresql/data

  db:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: "postgres"
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "postgres"]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 30s
    volumes:
      - ./db_data/db_2:/var/lib/postgresql/data

  mlflow_db:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${MLFLOW_DB}
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "${MLFLOW_DB}"]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 30s
    volumes:
      - ./db_data/db_3:/var/lib/postgresql/data

  minio:
    image: minio/minio
    env_file:
      - .env
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./db_data/minio_storage:/data
    command: server --console-address ":9001" /data

  mlflow:
    << : *python-common
    container_name: mlflow
    entrypoint: /bin/bash
    command:
      - -c
      - 'mlflow server
          --host 0.0.0.0
          --port 8081
          --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@mlflow_db:5432/${MLFLOW_DB}
          --default-artifact-root ${MLFLOW_S3_ARTIFACT_ROOT}
          --serve-artifacts'
    ports:
      - "8081:8081"
    depends_on:
      mlflow_db:
        condition: service_healthy
    volumes:
      - ./.aws/:/home/airflow/.aws/

    
  airflow-init:
    << : *airflow-common
    container_name: airflow_init
    entrypoint: /bin/bash
    command:
      - -c
      - '!(airflow users list | grep "No data found") || ( airflow db migrate &&
        airflow users create
          --role Admin
          --username airflow
          --password airflow
          --email airflow@airflow.com
          --firstname airflow
          --lastname airflow )'
    restart: on-failure

  airflow-webserver:
    << : *airflow-common
    command: airflow webserver
    ports:
      - 8080:8080
    container_name: airflow_webserver
    restart: always

  airflow-scheduler:
    << : *airflow-common
    command: airflow scheduler
    container_name: airflow_scheduler
    restart: always